ОБЩЕЕ ОПИСАНИЕ

При поддержке проекта надо иметь ввиду следующие вещи:

0 Сейчас это html5 приложение практически полностью написанное на JavaScript,
	но так было не всегда и это оставило свои отпечатки.

1 Сначала этот проект был написан на Flash Action Script 2.0, потом переписан на Flash Action Script3.0
  Экспорта в pdf не было и печать происходила прямо из флешки на принтер
  Флешка размещалась на сайте на web странице
  
2 Так как всё меньше клиентов стали использовать flash мы были вынуждены переписать проект на
   HTML5
  Так как ActionScript  и JavaScript происходят от одного стандарта - ECMAScript 
  было принято решение переписать часть кода флешки на js
  (То что каается отображения превью выкройки)
  Для совместимости кода ActionScript связанного с анимацией была создана библиотека 
  se2d (Simple Engine 2D)
  https://github.com/lamzin-andrey/se2d
   - это позволило использовать ActinScript код внося в него минимум изменений
  
  Библиотека реализует такие "встроенные" в ActionScript классы как 
  Graphix, Sprite, TextField, TextFormat
  
  Но работать с принтером или генерировать PDF на javaScript не было возможности, поэтому часть
  классов исходной флешки была переписана на php и вынесена на бэкенд.
  Вместо принтера использовался класс для генерации pdf fpdf
  http://www.fpdf.org/
  
  Для совместимости кода были написаны на php несколько "встроенныех" в ActionScript классов, таких как
  PrintJob, Graphix, Sprite, TextField, TextFormat
  
  PrintJob использует fpdf но вместе с тем реализует часть интерфейса одноименного класса ActionScript 3.0
  , ту часть, которую использует данное приложениею
  
3. Нам понадобилась оффлайн версия. HTML5 версия уже ушла вперед по сравнению с flash версией 
		(в плане функционала и исправления багов)
   поэтому было принято решение портировать php код в js код c помощью транслятора
   http://php2js.ru.
   
   Для избежания конфликта имен с se2d классы 
   Graphix, Sprite, TextField, TextFormat, которые были реализованы на php имеют префикс P
   (PGraphix, PSprite, PTextField, PTextFormat)
   
   Также переписан с php на js контроллер CResponder, который в онлайн-версии приложения принимает 
   ajax запросы с фронтенда и передает управление классам переписаным ранее с ActionScript на php
   , а ныне переписным с php на JavaScript.
      
   
   Окно программы - это по сути дела браузер без строки ввода адреса, основанный на Qt WebView
   (когда-то на нем писалась Opera)
   
   Весь js выполняется в этом браузере.
   От обычного браузера он отличаестя ещё и тем, 
   что в нем доступны два нестандартных объекта:
	Qt и PHP.
  
   Программные интерфейсы объектов описаны тут:
   https://github.com/lamzin-andrey/gjs/blob/mrcs/data/default/doc/desktopAPI.html
   
СТРУКТУРА КАТАЛОГА ПРИЛОЖЕНИЯ
На верхнем уровне вас интересует только папка default, она содержит весь js код 
В прочих папках первого уровня 
help, imageformats, tmp содержатся помощь к программе, плагины Qt для работы с изображениями, 
а в папку tmp программа сохраняет pdf и dxf файлы.


СТРУКТУРА КАТАЛОГА DEFAULT
dss файлы - это формат выкроек из программы redcafe
Удобно тестировать.

index.tpl.html - это верстка вашего приложения. Если вам надо добавить новую кнопку или что-то в
этом роде - работайте с ним.
Остальные html файлы генерируются программой из него.
Это связано с тем, что используемая версия Qt не умеет работать с относительными путями.
В index.html вы можете видеть простой js код, который получает контент index.tpl.html
, заменяет в нем путь на реальный и рендерит в браузере.

ls.json - Замена интерфейса window.localStorage работает с ним, то есть все что приложение
сохраняет функцией 
storage() хранится в нём.

run.bat - сейчас не используется, но оставлен на тот случай если нам вдруг станет необходимым вернуться к использованию интерпретатора
php в оффлайне.


Каталоги js, css, img содержат обычные для любого html5 приложения файлы.
Это почти полностью совпадает с тем, что используестя на web странице в личном кабинете.
Однако, вместо http запросов вызывается функция определенная в offline.js она передает управление
классам переписанным с php на js.
Поначалу мы использовали интерпретатор php в оффлайне, это оставило свой отпечаток в виде 
передачи данных как аргументов командной строки. На данный момент это конечно излишество, 
но с другой сторны, кто знает, может мы вернемся к использованию интерпретатора PHP?

Каталог actionscript содержит файлы, переписанные с ActionScript 3.0 на JavaScript.

Каталог php содержит файлы, транслированные  с php на JavaScript  транслятором
http://php2js.ru.

Каталог tools содержит служебные функции. Это часть проекта 
https://github.com/lamzin-andrey/gjs/
предназначенного для возможности создавать html5 приложения для desktop windows, linux, MacOS
(тот самый браузер без адресной строки и с расширенными функциями.
Код, из которого скомпилирован a.exe находится в ветке проекта mrcs - это важно, там иконка приложения и ещё есть нюансы)
Каталог tools никак трогать не надо, разве что в самом крайнем случае, вообразить который пока сложно.

Назначение каждого файла js коротко прокомментировано при его подключении в index.tpl.html



ВЕРСИЯ QT
Для сборки бинарников исп. qt-sdk-win-opensource-2010.04.exe
(либы 4.6.3 с которыми и собирается всё это безобразие в C\Qt\201.04\qt\bin)


https://yadi.sk/d/kJPYB92_6kW4QA
 - в архиве qt-sdk-win-opensource-2010.04.exe
   там же используемый установщик innoSetup
   Исходники html5 приложения в этом архиве (если они там есть) могут отличаться от актуальных!
   Актуальные можно получить установив приложение и скопировав папку default
   
   Актуальные исходники C++ https://github.com/lamzin-andrey/gjs/
   Ветка mrcs, это важно.
   
Сначала использовалась более новая версия Qt 5.х 
но её оказалось сложнее деплоить на windows и она в целом почему то была более глючной и ресурсоёмкой.



   


